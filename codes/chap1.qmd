---
title: "1 RÃ©gression simple"
toc: true
---

#   La concentration en ozone



```{python}
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import statsmodels.formula.api as smf
```

```{python}
#| echo: false

plt.rc('font', **{'family': 'serif', 'serif': ['Latin Modern Roman']})
plt.rc("font", size=6)
plt.rc("lines", markersize=4) #
```

```{python}

ozone = pd.read_csv("../donnees/ozone_simple.txt", header=0, sep=";")
plt.plot(ozone.T12, ozone.O3, '.k')
plt.ylabel('O3')
plt.xlabel('T12')
plt.show()
```


```{python}
reg = smf.ols('O3 ~ T12', data=ozone).fit()
reg.summary()
```


```{python}
grille = pd.DataFrame({'T12': np.linspace(ozone.T12.min(), ozone.T12.max(), 100)})
calculprev = reg.get_prediction(grille)
ICdte = calculprev.conf_int(obs=False, alpha=0.05)
prev = calculprev.predicted_mean
ICprev = calculprev.conf_int(obs=True, alpha=0.05)
```


```{python}
plt.plot(ozone.T12, ozone.O3, '.k')
plt.ylabel('O3')
plt.xlabel('T12')
plt.plot(grille.T12,  prev, '-', lw=1, label="E(Y)")
lesic, = plt.plot(grille.T12, ICdte[:, 0], 'r--', label=r"IC $\mathbb{E}(Y)$", lw=1)
plt.plot(grille.T12, ICdte[:, 1], 'r--', lw=1)
plt.legend(handles=[lesic,], loc='lower right')
```


```{python}
plt.plot(ozone.T12, ozone.O3, '.k')
plt.ylabel('O3') ; plt.xlabel('T12')
plt.plot(grille.T12,  prev, '-', lw=1, label="E(Y)")
lesic, = plt.plot(grille.T12, ICdte[:, 0], 'r--', label=r"IC $\mathbb{E}(Y)$", lw=1)
plt.plot(grille.T12, ICdte[:, 1],'r--', lw=1)

lesic2, = plt.plot(grille.T12, ICprev[:, 0], 'g:', label=r"IC $Y$", lw=1)
plt.plot(grille.T12, ICprev[:, 1],'g:', lw=1)
plt.legend(handles=[lesic, lesic2], loc='lower right')
```


```{python}
ICparams = reg.conf_int(alpha=0.05)
round(ICparams, 3)
```

#  La hauteur des eucalyptus

```{python}
eucalyptus = pd.read_csv("../donnees/eucalyptus.txt", header=0, sep=";")
plt.plot(eucalyptus.circ, eucalyptus.ht, '+k')
plt.ylabel('ht')
plt.xlabel('circ')
plt.show()
```


```{python}
reg = smf.ols('ht ~ circ', data=eucalyptus).fit()
reg.summary()
```


```{python}
grille = pd.DataFrame({'circ' : np.linspace(eucalyptus.circ.min(), eucalyptus.circ.max(), 100)})
calculprev = reg.get_prediction(grille)
ICdte = calculprev.conf_int(obs=False, alpha=0.05)
ICprev = calculprev.conf_int(obs=True, alpha=0.05)
prev = calculprev.predicted_mean
```


```{python}
plt.plot(eucalyptus.circ, eucalyptus.ht, '+k')
plt.ylabel('ht') ; plt.xlabel('circ')
plt.plot(grille.circ,  prev, '-', label="E(Y)", lw=1)
lesic, = plt.plot(grille.circ, ICdte[:, 0], 'r--', label=r"IC $\mathbb{E}(Y)$", lw=1)
plt.plot(grille.circ, ICdte[:, 1], 'r--', lw=1)
plt.legend(handles=[lesic], loc='lower right')
```


```{python}
plt.plot(eucalyptus.circ, eucalyptus.ht, '+k')
plt.ylabel('ht') ; plt.xlabel('circ')
plt.plot(grille.circ,  prev, '-', label="E(Y)", lw=1)
lesic, = plt.plot(grille.circ, ICdte[:, 0], 'r--', label=r"IC $\mathbb{E}(Y)$", lw=1)
plt.plot(grille.circ, ICdte[:, 1], 'r--', lw=1)
lesic2, = plt.plot(grille.circ, ICprev[:, 0], 'g:', label=r"IC $Y$", lw=1)
plt.plot(grille.circ, ICprev[:, 1],'g:', lw=1)
plt.legend(handles=[lesic, lesic2], loc='lower right')
```