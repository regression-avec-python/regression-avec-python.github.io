{
  "hash": "7ed2de70672ee632b0aa78f6b06c2b7d",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Inférence dans le modèle gaussien\"\ntoc: true\n---\n\n::: {#8f68583c .cell execution_count=1}\n``` {.python .cell-code}\nimport numpy as np; import pandas as pd\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport scipy.stats as stats\nimport statsmodels.formula.api as smf\nimport statsmodels.api as sm\n```\n:::\n\n\n::: {#e18dc501 .cell execution_count=2}\n``` {.python .cell-code}\nozone = pd.read_csv(\"../donnees/ozone.txt\", header=0, sep=\";\")\nmod3 = smf.ols(\"O3 ~ T12+Vx+Ne12\", data=ozone).fit()\nprint(mod3.conf_int(alpha=0.05))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                   0           1\nIntercept  57.158415  111.936250\nT12         0.313811    2.316281\nVx          0.149186    0.823705\nNe12       -6.960609   -2.826137\n```\n:::\n:::\n\n\n::: {#94ade7f0 .cell execution_count=3}\n``` {.python .cell-code}\nmod3.summary()\nICparams=mod3.conf_int(alpha=0.05)\nmod3.params\n\nstats.t.ppf(0.95, mod3.df_resid)\n\nICparams=mod3.conf_int(alpha=0.025)\n\n\ndef ellipse(m, ij, alpha=0.05, npoints=500):\n    import numpy as np\n    from scipy.stats import f\n    hatSigma = m.cov_params().iloc[ij,ij]\n    valpr,vectpr = np.linalg.eig(hatSigma)\n    hatSigmademi = vectpr @ np.diag(np.sqrt(valpr))\n    theta = np.linspace(0, 2 * np.pi, npoints)\n    rho = (2 * f.isf(alpha, 2, m.nobs - 2))**0.5\n    XX = np.array([rho * np.cos(theta), rho * np.sin(theta)])\n    ZZ = np.add((hatSigmademi @ XX).T, m.params.iloc[ij].to_numpy())\n    return ZZ\n\nfig = plt.figure()\nfig, axs = plt.subplots(3, 2,figsize=(8, 8))\nic = 0\nil = 0\nfor i in range(0,3):\n    for j in range(i+1,4):\n        coord = ellipse(mod3, [i, j])\n        axs[il,ic].fill(coord[:,0], coord[:,1], fc='lightgrey', ec='k', lw=1)\n        axs[il,ic].plot(mod3.params.iloc[i], mod3.params.iloc[j], \"+\")\n        r = matplotlib.patches.Rectangle(ICparams.iloc[[i, j], 0], ICparams.diff(axis=1).iloc[i, 1], ICparams.diff(axis=1).iloc[j, 1], fill=False)\n        axs[il,ic].add_artist(r)\n        if ic==0:\n            ic = 1\n        else:\n            ic = 0\n            il += 1\n\n\n            \nfig.tight_layout()            \n```\n\n::: {.cell-output .cell-output-display}\n```\n<Figure size 672x480 with 0 Axes>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](chap6_files/figure-html/cell-4-output-2.png){width=757 height=757}\n:::\n:::\n\n\n::: {#7ed7063f .cell execution_count=4}\n``` {.python .cell-code}\n#print(mod3.scale*mod3.df_resid/scipy.stats.chi2.ppf(0.975,mod3.df_resid))\n#print(mod3.scale*mod3.df_resid/scipy.stats.chi2.ppf(0.025,mod3.df_resid))\n```\n:::\n\n\n#   Exemple 1 : la concentration en ozone\n\n::: {#500596f7 .cell execution_count=5}\n``` {.python .cell-code}\nmod3 = smf.ols(\"O3 ~ T12 + Vx + Ne12\",data=ozone).fit()\nmod3.summary()\n```\n\n::: {.cell-output .cell-output-display execution_count=5}\n```{=html}\n<table class=\"simpletable\">\n<caption>OLS Regression Results</caption>\n<tr>\n  <th>Dep. Variable:</th>           <td>O3</td>        <th>  R-squared:         </th> <td>   0.682</td>\n</tr>\n<tr>\n  <th>Model:</th>                   <td>OLS</td>       <th>  Adj. R-squared:    </th> <td>   0.661</td>\n</tr>\n<tr>\n  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th> <td>   32.87</td>\n</tr>\n<tr>\n  <th>Date:</th>             <td>Fri, 31 Jan 2025</td> <th>  Prob (F-statistic):</th> <td>1.66e-11</td>\n</tr>\n<tr>\n  <th>Time:</th>                 <td>15:41:08</td>     <th>  Log-Likelihood:    </th> <td> -200.50</td>\n</tr>\n<tr>\n  <th>No. Observations:</th>      <td>    50</td>      <th>  AIC:               </th> <td>   409.0</td>\n</tr>\n<tr>\n  <th>Df Residuals:</th>          <td>    46</td>      <th>  BIC:               </th> <td>   416.7</td>\n</tr>\n<tr>\n  <th>Df Model:</th>              <td>     3</td>      <th>                     </th>     <td> </td>   \n</tr>\n<tr>\n  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>     <td> </td>   \n</tr>\n</table>\n<table class=\"simpletable\">\n<tr>\n      <td></td>         <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n</tr>\n<tr>\n  <th>Intercept</th> <td>   84.5473</td> <td>   13.607</td> <td>    6.214</td> <td> 0.000</td> <td>   57.158</td> <td>  111.936</td>\n</tr>\n<tr>\n  <th>T12</th>       <td>    1.3150</td> <td>    0.497</td> <td>    2.644</td> <td> 0.011</td> <td>    0.314</td> <td>    2.316</td>\n</tr>\n<tr>\n  <th>Vx</th>        <td>    0.4864</td> <td>    0.168</td> <td>    2.903</td> <td> 0.006</td> <td>    0.149</td> <td>    0.824</td>\n</tr>\n<tr>\n  <th>Ne12</th>      <td>   -4.8934</td> <td>    1.027</td> <td>   -4.765</td> <td> 0.000</td> <td>   -6.961</td> <td>   -2.826</td>\n</tr>\n</table>\n<table class=\"simpletable\">\n<tr>\n  <th>Omnibus:</th>       <td> 0.211</td> <th>  Durbin-Watson:     </th> <td>   1.758</td>\n</tr>\n<tr>\n  <th>Prob(Omnibus):</th> <td> 0.900</td> <th>  Jarque-Bera (JB):  </th> <td>   0.411</td>\n</tr>\n<tr>\n  <th>Skew:</th>          <td>-0.050</td> <th>  Prob(JB):          </th> <td>   0.814</td>\n</tr>\n<tr>\n  <th>Kurtosis:</th>      <td> 2.567</td> <th>  Cond. No.          </th> <td>    148.</td>\n</tr>\n</table><br/><br/>Notes:<br/>[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n```\n:::\n:::\n\n\n::: {#a91c5c44 .cell execution_count=6}\n``` {.python .cell-code}\nmod3.conf_int(alpha=0.05)\n```\n\n::: {.cell-output .cell-output-display execution_count=6}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>0</th>\n      <th>1</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Intercept</th>\n      <td>57.158415</td>\n      <td>111.936250</td>\n    </tr>\n    <tr>\n      <th>T12</th>\n      <td>0.313811</td>\n      <td>2.316281</td>\n    </tr>\n    <tr>\n      <th>Vx</th>\n      <td>0.149186</td>\n      <td>0.823705</td>\n    </tr>\n    <tr>\n      <th>Ne12</th>\n      <td>-6.960609</td>\n      <td>-2.826137</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {#76a849fa .cell execution_count=7}\n``` {.python .cell-code}\nmod2 = smf.ols(\"O3 ~ T12 + Vx\",data=ozone).fit()\nround(sm.stats.anova_lm(mod2,mod3),3)\n```\n\n::: {.cell-output .cell-output-display execution_count=7}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>df_resid</th>\n      <th>ssr</th>\n      <th>df_diff</th>\n      <th>ss_diff</th>\n      <th>F</th>\n      <th>Pr(&gt;F)</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>47.0</td>\n      <td>13299.399</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>46.0</td>\n      <td>8904.622</td>\n      <td>1.0</td>\n      <td>4394.777</td>\n      <td>22.703</td>\n      <td>0.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n#   Exemple 2 : la hauteur des eucalyptus\n\n::: {#e82cd784 .cell execution_count=8}\n``` {.python .cell-code}\neucalyptus = pd.read_csv(\"../donnees/eucalyptus.txt\",header=0,sep=\";\")\nregS = smf.ols('ht~circ', data=eucalyptus).fit()\nregM = smf.ols('ht~circ +  np.sqrt(circ)', data=eucalyptus).fit()\nround(sm.stats.anova_lm(regS,regM),3)\n```\n\n::: {.cell-output .cell-output-display execution_count=8}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>df_resid</th>\n      <th>ssr</th>\n      <th>df_diff</th>\n      <th>ss_diff</th>\n      <th>F</th>\n      <th>Pr(&gt;F)</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1427.0</td>\n      <td>2052.084</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1426.0</td>\n      <td>1840.656</td>\n      <td>1.0</td>\n      <td>211.428</td>\n      <td>163.798</td>\n      <td>0.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {#32a5a793 .cell execution_count=9}\n``` {.python .cell-code}\nregM.summary()\n```\n\n::: {.cell-output .cell-output-display execution_count=9}\n```{=html}\n<table class=\"simpletable\">\n<caption>OLS Regression Results</caption>\n<tr>\n  <th>Dep. Variable:</th>           <td>ht</td>        <th>  R-squared:         </th> <td>   0.792</td>\n</tr>\n<tr>\n  <th>Model:</th>                   <td>OLS</td>       <th>  Adj. R-squared:    </th> <td>   0.792</td>\n</tr>\n<tr>\n  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th> <td>   2718.</td>\n</tr>\n<tr>\n  <th>Date:</th>             <td>Fri, 31 Jan 2025</td> <th>  Prob (F-statistic):</th>  <td>  0.00</td> \n</tr>\n<tr>\n  <th>Time:</th>                 <td>15:41:08</td>     <th>  Log-Likelihood:    </th> <td> -2208.5</td>\n</tr>\n<tr>\n  <th>No. Observations:</th>      <td>  1429</td>      <th>  AIC:               </th> <td>   4423.</td>\n</tr>\n<tr>\n  <th>Df Residuals:</th>          <td>  1426</td>      <th>  BIC:               </th> <td>   4439.</td>\n</tr>\n<tr>\n  <th>Df Model:</th>              <td>     2</td>      <th>                     </th>     <td> </td>   \n</tr>\n<tr>\n  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>     <td> </td>   \n</tr>\n</table>\n<table class=\"simpletable\">\n<tr>\n        <td></td>           <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n</tr>\n<tr>\n  <th>Intercept</th>     <td>  -24.3520</td> <td>    2.614</td> <td>   -9.314</td> <td> 0.000</td> <td>  -29.481</td> <td>  -19.223</td>\n</tr>\n<tr>\n  <th>circ</th>          <td>   -0.4829</td> <td>    0.058</td> <td>   -8.336</td> <td> 0.000</td> <td>   -0.597</td> <td>   -0.369</td>\n</tr>\n<tr>\n  <th>np.sqrt(circ)</th> <td>    9.9869</td> <td>    0.780</td> <td>   12.798</td> <td> 0.000</td> <td>    8.456</td> <td>   11.518</td>\n</tr>\n</table>\n<table class=\"simpletable\">\n<tr>\n  <th>Omnibus:</th>       <td> 3.015</td> <th>  Durbin-Watson:     </th> <td>   0.947</td>\n</tr>\n<tr>\n  <th>Prob(Omnibus):</th> <td> 0.221</td> <th>  Jarque-Bera (JB):  </th> <td>   2.897</td>\n</tr>\n<tr>\n  <th>Skew:</th>          <td>-0.097</td> <th>  Prob(JB):          </th> <td>   0.235</td>\n</tr>\n<tr>\n  <th>Kurtosis:</th>      <td> 3.103</td> <th>  Cond. No.          </th> <td>4.41e+03</td>\n</tr>\n</table><br/><br/>Notes:<br/>[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.<br/>[2] The condition number is large, 4.41e+03. This might indicate that there are<br/>strong multicollinearity or other numerical problems.\n```\n:::\n:::\n\n\n::: {#71c20406 .cell execution_count=10}\n``` {.python .cell-code}\ngrille = pd.DataFrame({'circ' : np.linspace(eucalyptus[\"circ\"].min(),eucalyptus[\"circ\"].max(),100)})\ncalculprev = regM.get_prediction(grille)\nprev = calculprev.predicted_mean\nICdte = calculprev.conf_int(obs=False, alpha=0.05)\nICpre = calculprev.conf_int(obs=True, alpha=0.05)\nfig = plt.figure()\nplt.plot(eucalyptus[\"circ\"], eucalyptus[\"ht\"], '+k')\nplt.ylabel('ht') ; plt.xlabel('circ')\nplt.plot(grille['circ'],  prev, '-', label=\"E(Y)\", lw=1)\nlesic, = plt.plot(grille['circ'], ICdte[:,0], 'r--', label=r\"IC $\\mathbb{E}(Y)$\",lw=1)\nplt.plot(grille['circ'], ICdte[:, 1], 'r--', lw=1)\nlesic2, = plt.plot(grille['circ'], ICpre[:, 0], 'g:', label=r\"IC $Y$\",lw=1)\nplt.plot(grille['circ'], ICpre[:, 1],'g:', lw=1)\nplt.legend(handles=[lesic, lesic2], loc='lower right')\nfig.tight_layout()\n```\n\n::: {.cell-output .cell-output-display}\n![](chap6_files/figure-html/cell-11-output-1.png){width=661 height=468}\n:::\n:::\n\n\n#   Intervlle de confiance : boostrap\n\n::: {#2cefd9f0 .cell execution_count=11}\n``` {.python .cell-code}\nmod3 = smf.ols(\"O3 ~ 1 + T12 + Vx + Ne12\", data = ozone).fit()\n\nmod3.params\nmod3.scale\nresidus3 = mod3.resid\nychap = mod3.fittedvalues\nn = residus3.shape[0]\n\nB = 1000\nCOEFF = np.zeros((B, 4))\nrng = np.random.default_rng(seed=1234)\nozoneetoile = ozone[[\"O3\", \"T12\" , \"Vx\",  \"Ne12\"]].copy()\nfor  b in range(B):\n    resetoile = residus3[rng.integers(n, size=n)]\n    O3etoile = np.add(ychap.values ,resetoile.values)\n    ozoneetoile.loc[:,\"O3\"] = O3etoile\n    regboot = smf.ols(\"O3 ~ 1+ T12 + Vx + Ne12\", data=ozoneetoile).fit()\n    COEFF[b] = regboot.params.values\n\n    \nprint(np.quantile(COEFF,[0.025, 0.975],axis=0))\n\nfig = plt.figure()\nn, bins, patches = plt.hist(COEFF[:,1], 30, density=True, facecolor='g', alpha=0.75)\nplt.xlabel(r'$\\hat \\beta_{2}^*$')\nfig.tight_layout()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[[ 58.65115402   0.44272441   0.18933792  -6.84767267]\n [108.56181699   2.31524345   0.80828089  -2.7953567 ]]\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](chap6_files/figure-html/cell-12-output-2.png){width=662 height=466}\n:::\n:::\n\n\n",
    "supporting": [
      "chap6_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}