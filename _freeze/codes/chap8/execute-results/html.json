{
  "hash": "6d981a50a5ed0bf3e0acb5581a91989d",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"8 Choix de variables\"\ntoc: true\n---\n\n::: {#4185e3d5 .cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd; import numpy as np\nimport matplotlib.pyplot as plt\nimport statsmodels.formula.api as smf\nimport statsmodels.api as sm\n\nimport sys\nsys.path.append('../modules')  # Ajoute le répertoire 'modules' au chemin de recherche des modules\nimport choixolsstats\n```\n:::\n\n\n# Introduction\n\n# Notations\n\n# Choix incorrects des variables\n\n# Critères classiques de choix de modèles\n\n# Procédure de sélection\n\n# Exemple : la concentration en ozone\n\n::: {#f7277084 .cell execution_count=2}\n``` {.python .cell-code}\nozone = pd.read_csv(\"../donnees/ozone.txt\", header = 0, sep = \";\")\nozone[\"vent\"] = ozone[\"vent\"].astype(\"category\")\n```\n:::\n\n\n::: {#0159de14 .cell execution_count=3}\n``` {.python .cell-code}\nupper = \"O3 ~ T12 + T15 + Ne12 + N12 + S12 + E12 + W12 + Vx + O3v\"\nmustbe = \"1\"\nmodcomplet = smf.ols(upper + \"+\" + mustbe, data=ozone).fit()\nmodsel = choixolsstats.bestols(ozone, upper=upper, mustbe=mustbe)\nmodsel['Cp'] = modsel['SSR']/modcomplet.mse_resid - modcomplet.nobs + 2 *  modsel['nb_var']\n```\n:::\n\n\n::: {#6ae8bc8c .cell execution_count=4}\n``` {.python .cell-code}\nmodsel.sort_values(by=[\"BIC\",\"nb_var\"]).iloc[:4,[1,3]]\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>var_added</th>\n      <th>BIC</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>366</th>\n      <td>(T15, O3v, Ne12, Vx)</td>\n      <td>411.974567</td>\n    </tr>\n    <tr>\n      <th>381</th>\n      <td>(T12, O3v, Ne12, Vx)</td>\n      <td>412.085048</td>\n    </tr>\n    <tr>\n      <th>443</th>\n      <td>(T15, O3v, Ne12)</td>\n      <td>412.146450</td>\n    </tr>\n    <tr>\n      <th>499</th>\n      <td>(O3v, Ne12)</td>\n      <td>412.310100</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {#e97830e6 .cell execution_count=5}\n``` {.python .cell-code}\nmodsel.sort_values(by=[\"AIC\",\"nb_var\"]).iloc[:4,[1,2]]\n```\n\n::: {.cell-output .cell-output-display execution_count=5}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>var_added</th>\n      <th>AIC</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>366</th>\n      <td>(T15, O3v, Ne12, Vx)</td>\n      <td>402.414452</td>\n    </tr>\n    <tr>\n      <th>381</th>\n      <td>(T12, O3v, Ne12, Vx)</td>\n      <td>402.524933</td>\n    </tr>\n    <tr>\n      <th>219</th>\n      <td>(S12, T15, O3v, Ne12, Vx)</td>\n      <td>403.238253</td>\n    </tr>\n    <tr>\n      <th>234</th>\n      <td>(S12, T12, O3v, Ne12, Vx)</td>\n      <td>403.563498</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {#d67d616f .cell execution_count=6}\n``` {.python .cell-code}\nmodsel.sort_values(by=[\"Cp\",\"nb_var\"]).iloc[:5,[1,7]]\n```\n\n::: {.cell-output .cell-output-display execution_count=6}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>var_added</th>\n      <th>Cp</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>366</th>\n      <td>(T15, O3v, Ne12, Vx)</td>\n      <td>2.947034</td>\n    </tr>\n    <tr>\n      <th>381</th>\n      <td>(T12, O3v, Ne12, Vx)</td>\n      <td>3.042036</td>\n    </tr>\n    <tr>\n      <th>219</th>\n      <td>(S12, T15, O3v, Ne12, Vx)</td>\n      <td>3.948540</td>\n    </tr>\n    <tr>\n      <th>234</th>\n      <td>(S12, T12, O3v, Ne12, Vx)</td>\n      <td>4.222300</td>\n    </tr>\n    <tr>\n      <th>354</th>\n      <td>(T15, E12, O3v, Ne12)</td>\n      <td>4.264315</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {#5d1b0fa0 .cell execution_count=7}\n``` {.python .cell-code}\nmodsel.sort_values(by=[\"R2adj\",\"nb_var\"],ascending=False). \\\n  iloc[:4,[1,6]]\n```\n\n::: {.cell-output .cell-output-display execution_count=7}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>var_added</th>\n      <th>R2adj</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>115</th>\n      <td>(S12, T15, W12, O3v, Ne12, Vx)</td>\n      <td>0.709059</td>\n    </tr>\n    <tr>\n      <th>219</th>\n      <td>(S12, T15, O3v, Ne12, Vx)</td>\n      <td>0.708613</td>\n    </tr>\n    <tr>\n      <th>366</th>\n      <td>(T15, O3v, Ne12, Vx)</td>\n      <td>0.708307</td>\n    </tr>\n    <tr>\n      <th>23</th>\n      <td>(N12, S12, T15, W12, O3v, Ne12, Vx)</td>\n      <td>0.707954</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {#03f99535 .cell execution_count=8}\n``` {.python .cell-code}\nmodsel.sort_values(by=[\"R2\",\"nb_var\"], ascending=False). \\\n    iloc[:4,[1,5]]\n```\n\n::: {.cell-output .cell-output-display execution_count=8}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>var_added</th>\n      <th>R2</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>(N12, S12, T15, E12, W12, T12, O3v, Ne12, Vx)</td>\n      <td>0.750501</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>(N12, S12, T15, E12, W12, O3v, Ne12, Vx)</td>\n      <td>0.750189</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>(N12, S12, T15, W12, T12, O3v, Ne12, Vx)</td>\n      <td>0.750040</td>\n    </tr>\n    <tr>\n      <th>23</th>\n      <td>(N12, S12, T15, W12, O3v, Ne12, Vx)</td>\n      <td>0.749675</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {#85d7499f .cell execution_count=9}\n``` {.python .cell-code}\nselec = modsel.sort_values(by=[\"BIC\",\"nb_var\"]).iloc[:1,[1,3]]\nformule = \"O3 ~ 1 +\" + \"+\".join(selec.iloc[0,0])\nmodsel = smf.ols(formule, data=ozone).fit()\n```\n:::\n\n\n",
    "supporting": [
      "chap8_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}