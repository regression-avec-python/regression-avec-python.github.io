{
  "hash": "0a457024bb98bb4a95c4ae4192f446a8",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"10 Régression sur composantes : PCR et PLS\"\ntoc: true\n---\n\n::: {#676015e6 .cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd; import numpy as np\nimport matplotlib.pyplot as plt\nimport statsmodels.formula.api as smf\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.decomposition import PCA\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.cross_decomposition import PLSRegression\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.model_selection import GridSearchCV, KFold\nfrom sklearn.metrics import mean_squared_error\nimport sys\nsys.path.append('../modules')\nfrom ols_step_sk import LinearRegressionSelectionFeatureIC\n```\n:::\n\n\n#   Régression sur composantes principales (PCR)\n\n::: {#98b18a66 .cell execution_count=2}\n``` {.python .cell-code}\nozone = pd.read_csv(\"../donnees/ozone.txt\", header = 0, sep = \";\", index_col=0).iloc[:,:10]\nX = ozone.iloc[:,1:10]\ny = ozone.iloc[:,:1]\nreg = smf.ols('O3 ~ T12 + T15 + Ne12 + N12 + S12 + E12 + W12 + Vx + O3v', data=ozone).fit()\nreg.summary()\n```\n\n::: {.cell-output .cell-output-display execution_count=2}\n```{=html}\n<table class=\"simpletable\">\n<caption>OLS Regression Results</caption>\n<tr>\n  <th>Dep. Variable:</th>           <td>O3</td>        <th>  R-squared:         </th> <td>   0.751</td>\n</tr>\n<tr>\n  <th>Model:</th>                   <td>OLS</td>       <th>  Adj. R-squared:    </th> <td>   0.694</td>\n</tr>\n<tr>\n  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th> <td>   13.37</td>\n</tr>\n<tr>\n  <th>Date:</th>             <td>Fri, 31 Jan 2025</td> <th>  Prob (F-statistic):</th> <td>1.51e-09</td>\n</tr>\n<tr>\n  <th>Time:</th>                 <td>17:30:32</td>     <th>  Log-Likelihood:    </th> <td> -194.43</td>\n</tr>\n<tr>\n  <th>No. Observations:</th>      <td>    50</td>      <th>  AIC:               </th> <td>   408.9</td>\n</tr>\n<tr>\n  <th>Df Residuals:</th>          <td>    40</td>      <th>  BIC:               </th> <td>   428.0</td>\n</tr>\n<tr>\n  <th>Df Model:</th>              <td>     9</td>      <th>                     </th>     <td> </td>   \n</tr>\n<tr>\n  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>     <td> </td>   \n</tr>\n</table>\n<table class=\"simpletable\">\n<tr>\n      <td></td>         <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n</tr>\n<tr>\n  <th>Intercept</th> <td>   54.7278</td> <td>   17.279</td> <td>    3.167</td> <td> 0.003</td> <td>   19.806</td> <td>   89.650</td>\n</tr>\n<tr>\n  <th>T12</th>       <td>   -0.3518</td> <td>    1.573</td> <td>   -0.224</td> <td> 0.824</td> <td>   -3.531</td> <td>    2.827</td>\n</tr>\n<tr>\n  <th>T15</th>       <td>    1.4972</td> <td>    1.538</td> <td>    0.974</td> <td> 0.336</td> <td>   -1.611</td> <td>    4.605</td>\n</tr>\n<tr>\n  <th>Ne12</th>      <td>   -4.1922</td> <td>    1.064</td> <td>   -3.941</td> <td> 0.000</td> <td>   -6.342</td> <td>   -2.042</td>\n</tr>\n<tr>\n  <th>N12</th>       <td>    1.2755</td> <td>    1.363</td> <td>    0.936</td> <td> 0.355</td> <td>   -1.480</td> <td>    4.031</td>\n</tr>\n<tr>\n  <th>S12</th>       <td>    3.1711</td> <td>    1.911</td> <td>    1.660</td> <td> 0.105</td> <td>   -0.691</td> <td>    7.033</td>\n</tr>\n<tr>\n  <th>E12</th>       <td>    0.5277</td> <td>    1.943</td> <td>    0.272</td> <td> 0.787</td> <td>   -3.399</td> <td>    4.454</td>\n</tr>\n<tr>\n  <th>W12</th>       <td>    2.4749</td> <td>    2.072</td> <td>    1.194</td> <td> 0.239</td> <td>   -1.713</td> <td>    6.663</td>\n</tr>\n<tr>\n  <th>Vx</th>        <td>    0.6077</td> <td>    0.486</td> <td>    1.251</td> <td> 0.218</td> <td>   -0.374</td> <td>    1.589</td>\n</tr>\n<tr>\n  <th>O3v</th>       <td>    0.2454</td> <td>    0.096</td> <td>    2.543</td> <td> 0.015</td> <td>    0.050</td> <td>    0.440</td>\n</tr>\n</table>\n<table class=\"simpletable\">\n<tr>\n  <th>Omnibus:</th>       <td> 0.252</td> <th>  Durbin-Watson:     </th> <td>   1.887</td>\n</tr>\n<tr>\n  <th>Prob(Omnibus):</th> <td> 0.881</td> <th>  Jarque-Bera (JB):  </th> <td>   0.364</td>\n</tr>\n<tr>\n  <th>Skew:</th>          <td> 0.153</td> <th>  Prob(JB):          </th> <td>   0.833</td>\n</tr>\n<tr>\n  <th>Kurtosis:</th>      <td> 2.716</td> <th>  Cond. No.          </th> <td>    859.</td>\n</tr>\n</table><br/><br/>Notes:<br/>[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n```\n:::\n:::\n\n\n::: {#2ccebe78 .cell execution_count=3}\n``` {.python .cell-code}\nmod_lin9v = LinearRegression()\nmod_lin9v.fit(X,y)\nnp.round(mod_lin9v.coef_,2)\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```\narray([[-0.35,  1.5 , -4.19,  1.28,  3.17,  0.53,  2.47,  0.61,  0.25]])\n```\n:::\n:::\n\n\n::: {#dd0538d9 .cell execution_count=4}\n``` {.python .cell-code}\nreg_bic = LinearRegressionSelectionFeatureIC(crit=\"bic\")\nreg_bic.fit(X, y)\nX.columns[reg_bic.selected_features_]\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```\nIndex(['T15', 'Ne12', 'Vx', 'O3v'], dtype='object')\n```\n:::\n:::\n\n\n::: {#12d37638 .cell execution_count=5}\n``` {.python .cell-code}\ncr = StandardScaler()\nacp = PCA(n_components=9)\npipe_acp = Pipeline(steps=[(\"cr\", cr), (\"acp\", acp)])\npipe_acp.fit(X)\nXortho = pipe_acp.fit_transform(X)\nreg_bic.fit(Xortho, y)\nvarsel = reg_bic.selected_features_\nvarsel\n```\n\n::: {.cell-output .cell-output-display execution_count=5}\n```\n[0, 4]\n```\n:::\n:::\n\n\n::: {#640d9360 .cell execution_count=6}\n``` {.python .cell-code}\nstep_cr = pipe_acp.named_steps[\"cr\"]\nstdX = step_cr.scale_\nmeanX = step_cr.mean_\ncoef_pcr =reg_bic.coef_\nstep_acp = pipe_acp.named_steps[\"acp\"]\nP = step_acp.components_[reg_bic.selected_features_,]\nbetafinpcr = P.T.dot(coef_pcr.T)[:,0]/stdX\nintercept = y.mean(axis=0) - meanX.dot(betafinpcr.T)\nnp.round(np.append(intercept, betafinpcr),2)\n```\n\n::: {.cell-output .cell-output-display execution_count=6}\n```\narray([ 5.279e+01,  4.100e-01,  4.700e-01, -2.540e+00, -8.700e-01,\n        2.000e-02,  1.060e+00, -8.500e-01,  2.300e-01,  3.400e-01])\n```\n:::\n:::\n\n\n::: {#c67e64d5 .cell execution_count=7}\n``` {.python .cell-code}\ncr = StandardScaler()\nacp = PCA()\nreg = LinearRegression()\npipe_pcr = Pipeline(steps=[(\"cr\", cr), (\"acp\", acp), (\"reg\", reg)])\nparam_grid_pcr = { \"acp__n_components\" : list(range(1,10))}\nkf = KFold(n_splits=4, shuffle=True, random_state=0)\ncv_pcr = GridSearchCV(pipe_pcr, param_grid_pcr, cv=kf, scoring = 'neg_mean_squared_error', n_jobs=3).fit(X, y)\n```\n:::\n\n\n::: {#197fd4da .cell execution_count=8}\n``` {.python .cell-code}\nimport matplotlib.cm as cm\ncolors = cm.Set1(range(1))\ncolors2 = colors\ncolors2[:,3] = colors2[:,3] -0.7\nfig, ax1 = plt.subplots(1, 1)\nax1.errorbar(list(range(1,10)), -cv_pcr.cv_results_[\"mean_test_score\"],\n             cv_pcr.cv_results_[\"std_test_score\"]/kf.n_splits**0.5 , capsize=10,  c=colors[0], ecolor=colors2[0])\nfig.tight_layout()\n```\n\n::: {.cell-output .cell-output-display}\n![](chap10_files/figure-html/cell-9-output-1.png){width=662 height=469}\n:::\n:::\n\n\n::: {#dfd96e5f .cell execution_count=9}\n``` {.python .cell-code}\nbestpcr =  cv_pcr.best_estimator_\ncv_pcr.best_params_\nstep_reg = bestpcr.named_steps[\"reg\"]\ncoef_pcr = step_reg.coef_\nstep_cr =  bestpcr.named_steps[\"cr\"]\nstdX = step_cr.scale_\nmeanX = step_cr.mean_\nstep_acp = bestpcr.named_steps[\"acp\"]\nP = step_acp.components_\nbetafinpcr = P.T.dot(coef_pcr.T)[:,0]/stdX\nintercept = y.mean(axis=0) - meanX.dot(betafinpcr.T)\nnp.round(np.append(intercept, betafinpcr),2)\n```\n\n::: {.cell-output .cell-output-display execution_count=9}\n```\narray([58.33,  0.68,  0.44, -4.45,  1.24,  2.11,  1.84,  0.6 ,  0.15,\n        0.25])\n```\n:::\n:::\n\n\n#   Régression aux moindres carrés partiels (PLS)\n\n::: {#52d6a0ce .cell execution_count=10}\n``` {.python .cell-code}\nregpls = PLSRegression()\nparam_grid_pls = { \"n_components\" : list(range(1,10))}\nkf = KFold(n_splits=4, shuffle=True, random_state=0)\ncv_pls = GridSearchCV(regpls, param_grid_pls, cv=kf, scoring = 'neg_mean_squared_error').fit(X, y)\n```\n:::\n\n\n::: {#3b60f3b0 .cell execution_count=11}\n``` {.python .cell-code}\ncolors = cm.Set1(range(1))\ncolors2 = colors\ncolors2[:,3] = colors2[:,3] -0.6\nfig, ax1 = plt.subplots(1, 1)\nax1.errorbar(list(range(1,10)), -cv_pls.cv_results_[\"mean_test_score\"],  cv_pls.cv_results_[\"std_test_score\"]/kf.n_splits**0.5 ,  capsize=10, c=colors[0], ecolor=colors2[0])\nfig.tight_layout()\n```\n\n::: {.cell-output .cell-output-display}\n![](chap10_files/figure-html/cell-12-output-1.png){width=662 height=469}\n:::\n:::\n\n\n::: {#f86b1904 .cell execution_count=12}\n``` {.python .cell-code}\nbestpls =  cv_pls.best_estimator_\ncv_pls.best_params_\nbestpls.fit(X,y)\nbestpls.coef_\n```\n\n::: {.cell-output .cell-output-display execution_count=12}\n```\narray([[ 0.41610174,  0.53217084, -4.4244714 ,  0.37042358,  1.60857405,\n         0.98429296,  0.56053927,  0.24800203,  0.26473814]])\n```\n:::\n:::\n\n\n::: {#0380c1b8 .cell execution_count=13}\n``` {.python .cell-code}\nscalerX = StandardScaler().fit(X)\nstdX = scalerX.scale_\nmeanX = scalerX.mean_\nbetafinpls = bestpls.coef_[:,0]/stdX\nintercept = y.mean(axis=0) - meanX.dot(betafinpls.T)\nnp.append(intercept, betafinpls)\n```\n\n::: {.cell-output .cell-output-display execution_count=13}\n```\narray([7.95723726e+01, 8.99163083e-02, 8.43936432e-02, 1.65784166e-01,\n       1.98000066e-01, 2.80306490e-01, 1.88545955e-01, 1.71475028e-01,\n       3.09237815e-02, 1.68441318e-02])\n```\n:::\n:::\n\n\n",
    "supporting": [
      "chap10_files/figure-html"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}