{
  "hash": "e0983387f257a7e031247176729da267",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"13 Régression de Poisson\"\ntoc: true\n---\n\n\n\n\n::: {.content-hidden}\n\n\\DeclareMathOperator{\\C}{Cov}\n\\DeclareMathOperator{\\V}{V}\n\\DeclareMathOperator{\\leR}{R^2}\n\\newcommand{\\M}{\\mathcal M}\n\\DeclareMathOperator{\\MCO}{MCO}\n\\DeclareMathOperator{\\SC}{SC}\n\\DeclareMathOperator{\\SCR}{SCR}\n\\DeclareMathOperator{\\SCT}{SCT}\n\\DeclareMathOperator{\\SCE}{SCE}\n\\DeclareMathOperator{\\EQM}{EQM}\n\\DeclareMathOperator{\\ro}{R^2_0}\n\\DeclareMathOperator{\\CMR}{CMR}\n\\DeclareMathOperator{\\CME}{CME}\n\\DeclareMathOperator{\\radeux}{R^2_a}\n\\DeclareMathOperator{\\Cp}{C_p}\n\n\n\\newcommand{\\1}{\\mathbf{1}}\n\\newcommand{\\un}{\\mathbf{1}}\n\\newcommand{\\D}{\\displaystyle}\n\n\n\\newcommand{\\prob}{\\mathbf P}\n\\newcommand{\\argmin}{\\mathop{\\mathrm{argmin}}}\n\\newcommand{\\ind}{\\mathbf 1}\n\\newcommand{\\R}{\\mathbb R}\n\\newcommand{\\E}{\\mathbf E}\n\\newcommand{\\var}{\\mathbf V}\n\\newcommand{\\ps}[2]{\\langle #1,#2\\rangle}\n\\newcommand{\\card}[1]{|{#1}|}\n\\newcommand{\\cov}{\\mathbf{cov}}\n\\newcommand{\\corr}{\\text{corr}}\n\\newcommand{\\AUC}{\\text{AUC}}\n\\newcommand{\\logit}{\\text{logit}}\n\\newcommand{\\diag}{\\text{diag}}\n\\newcommand{\\tr}{\\text{tr}}\n\\newcommand{\\li}[2]{#1_{#2}}\n\\newcommand{\\ssli}[2]{#1_{(#2)}}\n\\newcommand{\\HH}{{\\mathcal{H}}}\n\\newcommand{\\Hz}{{\\mathrm{H_0}}}\n\\newcommand{\\sfrac}[2]{{#1}/{#2}}\n\n\n\n:::\n\n::: {#d658afea .cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport statsmodels.api as sm\nimport statsmodels.formula.api as smf\nfrom scipy.stats import chi2_contingency\n```\n:::\n\n\n::: {#exr-13-1 name=\"Questions de cours\"}\nC, A, B, A, B, B, C, A\n:::\n\n::: {#exr-13-2}\n\n:::\n\n::: {#exr-13-3}\n\n:::\n\n::: {#exr-13-4 name=\"Stabilisation de la variance\"}\n\n::: {#d1d4e684 .cell execution_count=2}\n``` {.python .cell-code}\nlambdas = np.arange(1, 21)\nsample_size = 1000000\nvariances = []\n\nfor lam in lambdas:\n    X = np.random.poisson(lam, sample_size)\n    Z = np.sqrt(X)\n    variance_Z = np.var(Z)\n    variances.append(variance_Z)\n\nplt.plot(lambdas, variances, marker='o')\nplt.axhline(y=0.25, color='r', linestyle='--', label='Variance théorique = 1/4')\nplt.xlabel('Lambda')\nplt.ylabel('Variance empirique de Z')\nplt.title('Variance empirique de Z = sqrt(X) en fonction de Lambda')\nplt.legend()\nplt.grid(True)\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](chap13_files/figure-html/cell-3-output-1.png){width=597 height=449}\n:::\n:::\n\n\n:::\n\n::: {#exr-13-5 name=\"Stabilisation de la variance (suite)\"}\nLorsque $\\lambda$ est grand, on utilise t'approximétion de Taylor à l'ordre 1 :\n$$\n\\sqrt{X}\\approx \\sqrt{\\lambda}+\\frac{1}{2\\sqrt{\\lambda}}(X-\\lambda).\n$$\nComme $\\V(X)=\\lambda$, on déduit $\\V(\\sqrt{X})\\approx 1/4$.\n:::\n\n::: {#exr-13-6 name=\"Malaria (suite)\"}\n\n1.  \n\n\n    ::: {#ca86fe63 .cell execution_count=3}\n    ``` {.python .cell-code}\n    Malaria = pd.read_csv(\"../donnees/poissonData3.csv\", header=0, sep=',')\n    compt = Malaria[[\"Sexe\", \"Nmalaria\", \"Age\"]].groupby([\"Sexe\",\\\n                    \"Nmalaria\"]).count()\n    sexe = list(compt.index.levels[0])\n    signe = [1, -1]\n    for i, val in enumerate(sexe):\n        plt.bar(compt.loc[val].index, signe[i] * compt.loc[val].Age)\n    ```\n    \n    ::: {.cell-output .cell-output-display}\n    ![](chap13_files/figure-html/cell-4-output-1.png){width=586 height=411}\n    :::\n    :::\n    \n    \n    Les barres sont superposées : les filles puis les garçons. \n    Comme on soustrait à la hauteur totale les garçons (argument `offset`), on a les effectifs des filles en dessous et ceux des garçons au dessus.\n2.  Les moyennes par groupe\n\n\n    ::: {#8d8c9b9d .cell execution_count=4}\n    ``` {.python .cell-code}\n    print(Malaria[[\"Sexe\", \"Nmalaria\"]].groupby([\"Sexe\"]).mean())\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    ```\n          Nmalaria\n    Sexe          \n    F     4.579012\n    M     4.794370\n    ```\n    :::\n    :::\n    \n    \n3. \n\n\n    ::: {#7aa664f5 .cell execution_count=5}\n    ``` {.python .cell-code}\n    print(np.log(Malaria[[\"Sexe\", \"Nmalaria\"]].groupby([\"Sexe\"]).mean().loc[\"F\", :]))\n    print(np.log(Malaria[[\"Sexe\", \"Nmalaria\"]].groupby([\"Sexe\"]).mean()).diff().iloc[1])\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    ```\n    Nmalaria    1.521483\n    Name: F, dtype: float64\n    Nmalaria    0.045959\n    Name: M, dtype: float64\n    ```\n    :::\n    :::\n    \n    \n4.  Régression de Poisson\n\n\n    ::: {#c1eff3d9 .cell execution_count=6}\n    ``` {.python .cell-code}\n    modSexe = smf.glm(\"Nmalaria ~ 1 + Sexe\", data=Malaria, family=sm.families.Poisson()).fit()\n    modSexe.summary()\n    ```\n    \n    ::: {.cell-output .cell-output-display execution_count=6}\n    ```{=html}\n    <table class=\"simpletable\">\n    <caption>Generalized Linear Model Regression Results</caption>\n    <tr>\n      <th>Dep. Variable:</th>       <td>Nmalaria</td>     <th>  No. Observations:  </th>  <td>  1627</td> \n    </tr>\n    <tr>\n      <th>Model:</th>                  <td>GLM</td>       <th>  Df Residuals:      </th>  <td>  1625</td> \n    </tr>\n    <tr>\n      <th>Model Family:</th>         <td>Poisson</td>     <th>  Df Model:          </th>  <td>     1</td> \n    </tr>\n    <tr>\n      <th>Link Function:</th>          <td>Log</td>       <th>  Scale:             </th> <td>  1.0000</td>\n    </tr>\n    <tr>\n      <th>Method:</th>                <td>IRLS</td>       <th>  Log-Likelihood:    </th> <td> -5250.8</td>\n    </tr>\n    <tr>\n      <th>Date:</th>            <td>Tue, 04 Feb 2025</td> <th>  Deviance:          </th> <td>  5706.3</td>\n    </tr>\n    <tr>\n      <th>Time:</th>                <td>16:05:15</td>     <th>  Pearson chi2:      </th> <td>5.98e+03</td>\n    </tr>\n    <tr>\n      <th>No. Iterations:</th>          <td>5</td>        <th>  Pseudo R-squ. (CS):</th> <td>0.002471</td>\n    </tr>\n    <tr>\n      <th>Covariance Type:</th>     <td>nonrobust</td>    <th>                     </th>     <td> </td>   \n    </tr>\n    </table>\n    <table class=\"simpletable\">\n    <tr>\n          <td></td>         <th>coef</th>     <th>std err</th>      <th>z</th>      <th>P>|z|</th>  <th>[0.025</th>    <th>0.975]</th>  \n    </tr>\n    <tr>\n      <th>Intercept</th> <td>    1.5215</td> <td>    0.016</td> <td>   92.661</td> <td> 0.000</td> <td>    1.489</td> <td>    1.554</td>\n    </tr>\n    <tr>\n      <th>Sexe[T.M]</th> <td>    0.0460</td> <td>    0.023</td> <td>    2.006</td> <td> 0.045</td> <td>    0.001</td> <td>    0.091</td>\n    </tr>\n    </table>\n    ```\n    :::\n    :::\n    \n    \n    Nous retrouvons que le coefficient constant (`Intercept`) est le logarithme népérien de la moyenne du nombre de visites chez les filles. La modalité fille est la première modalité de la variable `Sexe` par ordre alphabétique et constitue la modalité de référence. Le coefficient constant est ici le logarithme (qui est la fonction de lien) de la moyenne du nombre de visites chez les filles. L'effet `M` est ici la différence des logarithmes ce que nous retrouvons dans le second coefficient.\n:::\n\n::: {#exr-13-7 name=\"Table de contingence et loi de Poisson\"}\n\n1.  \n\n\n    ::: {#eb2f74d1 .cell execution_count=7}\n    ``` {.python .cell-code}\n    data_crosstab = pd.crosstab(Malaria['Prev'],Malaria['Sexe'],margins = False) \n    print(data_crosstab) \n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    ```\n    Sexe               F    M\n    Prev                     \n    Autre              2    6\n    Moustiquaire     557  543\n    Rien             223  233\n    Serpentin/Spray   28   35\n    ```\n    :::\n    :::\n    \n    \n2.  \n\n\n    ::: {#9eb81d49 .cell execution_count=8}\n    ``` {.python .cell-code}\n    res = chi2_contingency(data_crosstab)\n    res.pvalue\n    ```\n    \n    ::: {.cell-output .cell-output-display execution_count=8}\n    ```\n    0.3697755421416906\n    ```\n    :::\n    :::\n    \n    \n3.\n\n\n    ::: {#257ea9e5 .cell execution_count=9}\n    ``` {.python .cell-code}\n    Malaria[\"Sexe\"] = Malaria[\"Sexe\"].astype(\"category\")\n    Malaria[\"Prev\"] = Malaria[\"Prev\"].astype(\"category\")\n    \n    # Grouper les données par 'Sexe' et 'Prev' et calculer les effectifs et la somme de 'Nmalaria'\n    result = Malaria.groupby(['Sexe', 'Prev']).agg(effectif=('Nmalaria', 'size'), Y=('Nmalaria', 'sum')).reset_index()\n    print(result)\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    ```\n      Sexe             Prev  effectif     Y\n    0    F            Autre         2     8\n    1    F     Moustiquaire       557  2509\n    2    F             Rien       223  1073\n    3    F  Serpentin/Spray        28   119\n    4    M            Autre         6    24\n    5    M     Moustiquaire       543  2548\n    6    M             Rien       233  1134\n    7    M  Serpentin/Spray        35   211\n    ```\n    :::\n    :::\n    \n    \n4.\n\n\n    ::: {#b5309d23 .cell execution_count=10}\n    ``` {.python .cell-code}\n    mod1 = smf.glm(\"Nmalaria ~ -1 + Sexe:Prev\", data = Malaria, family=sm.families.Poisson()).fit()\n    mod1.summary()\n    ```\n    \n    ::: {.cell-output .cell-output-display execution_count=10}\n    ```{=html}\n    <table class=\"simpletable\">\n    <caption>Generalized Linear Model Regression Results</caption>\n    <tr>\n      <th>Dep. Variable:</th>       <td>Nmalaria</td>     <th>  No. Observations:  </th>  <td>  1627</td> \n    </tr>\n    <tr>\n      <th>Model:</th>                  <td>GLM</td>       <th>  Df Residuals:      </th>  <td>  1619</td> \n    </tr>\n    <tr>\n      <th>Model Family:</th>         <td>Poisson</td>     <th>  Df Model:          </th>  <td>     7</td> \n    </tr>\n    <tr>\n      <th>Link Function:</th>          <td>Log</td>       <th>  Scale:             </th> <td>  1.0000</td>\n    </tr>\n    <tr>\n      <th>Method:</th>                <td>IRLS</td>       <th>  Log-Likelihood:    </th> <td> -5242.5</td>\n    </tr>\n    <tr>\n      <th>Date:</th>            <td>Tue, 04 Feb 2025</td> <th>  Deviance:          </th> <td>  5689.7</td>\n    </tr>\n    <tr>\n      <th>Time:</th>                <td>16:05:15</td>     <th>  Pearson chi2:      </th> <td>5.95e+03</td>\n    </tr>\n    <tr>\n      <th>No. Iterations:</th>          <td>5</td>        <th>  Pseudo R-squ. (CS):</th>  <td>0.01263</td>\n    </tr>\n    <tr>\n      <th>Covariance Type:</th>     <td>nonrobust</td>    <th>                     </th>     <td> </td>   \n    </tr>\n    </table>\n    <table class=\"simpletable\">\n    <tr>\n                    <td></td>                   <th>coef</th>     <th>std err</th>      <th>z</th>      <th>P>|z|</th>  <th>[0.025</th>    <th>0.975]</th>  \n    </tr>\n    <tr>\n      <th>Sexe[F]:Prev[Autre]</th>           <td>    1.3863</td> <td>    0.354</td> <td>    3.921</td> <td> 0.000</td> <td>    0.693</td> <td>    2.079</td>\n    </tr>\n    <tr>\n      <th>Sexe[M]:Prev[Autre]</th>           <td>    1.3863</td> <td>    0.204</td> <td>    6.791</td> <td> 0.000</td> <td>    0.986</td> <td>    1.786</td>\n    </tr>\n    <tr>\n      <th>Sexe[F]:Prev[Moustiquaire]</th>    <td>    1.5051</td> <td>    0.020</td> <td>   75.389</td> <td> 0.000</td> <td>    1.466</td> <td>    1.544</td>\n    </tr>\n    <tr>\n      <th>Sexe[M]:Prev[Moustiquaire]</th>    <td>    1.5460</td> <td>    0.020</td> <td>   78.036</td> <td> 0.000</td> <td>    1.507</td> <td>    1.585</td>\n    </tr>\n    <tr>\n      <th>Sexe[F]:Prev[Rien]</th>            <td>    1.5710</td> <td>    0.031</td> <td>   51.462</td> <td> 0.000</td> <td>    1.511</td> <td>    1.631</td>\n    </tr>\n    <tr>\n      <th>Sexe[M]:Prev[Rien]</th>            <td>    1.5825</td> <td>    0.030</td> <td>   53.289</td> <td> 0.000</td> <td>    1.524</td> <td>    1.641</td>\n    </tr>\n    <tr>\n      <th>Sexe[F]:Prev[Serpentin/Spray]</th> <td>    1.4469</td> <td>    0.092</td> <td>   15.784</td> <td> 0.000</td> <td>    1.267</td> <td>    1.627</td>\n    </tr>\n    <tr>\n      <th>Sexe[M]:Prev[Serpentin/Spray]</th> <td>    1.7965</td> <td>    0.069</td> <td>   26.096</td> <td> 0.000</td> <td>    1.662</td> <td>    1.931</td>\n    </tr>\n    </table>\n    ```\n    :::\n    :::\n    \n    \n    Le modèle possède autant de paramètres que de points de design, il est donc saturé.\n    On retrouve les estimations à l'aide du tableau de la question précédente. Par \n    exemple, on a pour le premier estimateur :\n\n\n    ::: {#10a92712 .cell execution_count=11}\n    ``` {.python .cell-code}\n    np.log(8/2)\n    ```\n    \n    ::: {.cell-output .cell-output-display execution_count=11}\n    ```\n    1.3862943611198906\n    ```\n    :::\n    :::\n    \n    \n5.  \n\n\n    ::: {#ebb5a6c5 .cell execution_count=12}\n    ``` {.python .cell-code}\n    mod2 = smf.glm(\"Nmalaria ~ -1 + Sexe + Prev\", data = Malaria, family=sm.families.Poisson()).fit()\n    mod2.summary()\n    ```\n    \n    ::: {.cell-output .cell-output-display execution_count=12}\n    ```{=html}\n    <table class=\"simpletable\">\n    <caption>Generalized Linear Model Regression Results</caption>\n    <tr>\n      <th>Dep. Variable:</th>       <td>Nmalaria</td>     <th>  No. Observations:  </th>  <td>  1627</td> \n    </tr>\n    <tr>\n      <th>Model:</th>                  <td>GLM</td>       <th>  Df Residuals:      </th>  <td>  1622</td> \n    </tr>\n    <tr>\n      <th>Model Family:</th>         <td>Poisson</td>     <th>  Df Model:          </th>  <td>     4</td> \n    </tr>\n    <tr>\n      <th>Link Function:</th>          <td>Log</td>       <th>  Scale:             </th> <td>  1.0000</td>\n    </tr>\n    <tr>\n      <th>Method:</th>                <td>IRLS</td>       <th>  Log-Likelihood:    </th> <td> -5246.4</td>\n    </tr>\n    <tr>\n      <th>Date:</th>            <td>Tue, 04 Feb 2025</td> <th>  Deviance:          </th> <td>  5697.6</td>\n    </tr>\n    <tr>\n      <th>Time:</th>                <td>16:05:15</td>     <th>  Pearson chi2:      </th> <td>5.97e+03</td>\n    </tr>\n    <tr>\n      <th>No. Iterations:</th>          <td>5</td>        <th>  Pseudo R-squ. (CS):</th> <td>0.007828</td>\n    </tr>\n    <tr>\n      <th>Covariance Type:</th>     <td>nonrobust</td>    <th>                     </th>     <td> </td>   \n    </tr>\n    </table>\n    <table class=\"simpletable\">\n    <tr>\n                 <td></td>                <th>coef</th>     <th>std err</th>      <th>z</th>      <th>P>|z|</th>  <th>[0.025</th>    <th>0.975]</th>  \n    </tr>\n    <tr>\n      <th>Sexe[F]</th>                 <td>    1.3523</td> <td>    0.178</td> <td>    7.613</td> <td> 0.000</td> <td>    1.004</td> <td>    1.700</td>\n    </tr>\n    <tr>\n      <th>Sexe[M]</th>                 <td>    1.3974</td> <td>    0.177</td> <td>    7.901</td> <td> 0.000</td> <td>    1.051</td> <td>    1.744</td>\n    </tr>\n    <tr>\n      <th>Prev[T.Moustiquaire]</th>    <td>    0.1506</td> <td>    0.177</td> <td>    0.849</td> <td> 0.396</td> <td>   -0.197</td> <td>    0.498</td>\n    </tr>\n    <tr>\n      <th>Prev[T.Rien]</th>            <td>    0.2013</td> <td>    0.178</td> <td>    1.130</td> <td> 0.258</td> <td>   -0.148</td> <td>    0.550</td>\n    </tr>\n    <tr>\n      <th>Prev[T.Serpentin/Spray]</th> <td>    0.2784</td> <td>    0.185</td> <td>    1.503</td> <td> 0.133</td> <td>   -0.085</td> <td>    0.641</td>\n    </tr>\n    </table>\n    ```\n    :::\n    :::\n    \n    \n    Ce modèle n'est pas saturé. Il est identique au modèle\n\n\n    ::: {#91158a90 .cell execution_count=13}\n    ``` {.python .cell-code}\n    smf.glm(\"Nmalaria ~ Sexe + Prev\", data = Malaria, family=sm.families.Poisson()).fit()\n    ```\n    :::\n    \n    \n    mais propose une paramétrisation différente.\n\n6.  On calcule les AIC :\n\n\n    ::: {#3e6c08c3 .cell execution_count=14}\n    ``` {.python .cell-code}\n    print(mod1.aic)\n    print(mod2.aic)\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    ```\n    10500.991109809473\n    10502.88231091839\n    ```\n    :::\n    :::\n    \n    \n    On privilégie le modèle 1 pour ce critère. Le résultat ne contredit pas celui de la question 2 puisqu'une interaction n'est pas liée à l'indépendance entre 2 variables.\n:::\n\n",
    "supporting": [
      "chap13_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}